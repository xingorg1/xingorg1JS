.box {
  /* 
  flex布局：在 flex 布局 的子项中，可以通过百分比来计算变化高度 
  display: grid 和 display: -webkit-box 同样有效
  */
  display: flex;
}

.text.origin {
  -webkit-line-clamp: 999;
  overflow: visible;
}

.text .btn {
  float: right;
  /* margin-top: 50px;  */
  /* 
    使用margin-top让按钮移下去有两个问题
    1、不知道展开、伸缩的实际高度是多少
    2、按钮上边margin的距离会空出来，文字过不去
  */

  /* 但是利用多个浮动元素+自身清除浮动就能解决这个问题 */
  clear: both;
}
.text::before {
  content: '';
  float: right;
  /* 
  放开这两个可以看到效果
  width: 10px;
  background: red 
  */
  /*  
  但是具体高度应该是多少呢？需要动态计算
  height: 50px; 
  */
  /* 
  浮动后 高度100%失效，所以自动计算也不成立
  然后让整个父元素设置flex布局后，高度100%就成立了，再减去按钮自身的高度就行了
  height: calc(100% - 21px);
  */
  /* 动态高度也可以用margin负值实现，性能会比calc好 */
  height: 100%;
  margin-bottom: -20px;
}

/* 切换状态 */
.toggle:checked + .text {
  -webkit-line-clamp: 999; /*设置一个足够大的行数就可以全展开了*/
}
.btn::after {
  content: '展开';
}
.toggle:checked + .text .btn::after {
  content: '收起';
}

/* 隐藏展开按钮 */
.hide-btn1 .text {
  resize: horizontal;
}
.hide-btn .text {
  position: relative;
}
.hide-btn .text::after {
  /* 在文本末尾添加一个红色小方块，盖住展开按钮 */
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  background: white;
}
.hide-btn1 .text::after {
  width: 10px;
  height: 10px;
  background: red;
}

/* 收起按钮不能被遮挡，所以单独显示 */
.hide-btn2 .toggle:checked + .text::after {
  visibility: hidden;
}
